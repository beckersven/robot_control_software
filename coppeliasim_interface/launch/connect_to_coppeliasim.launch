<launch>
    <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur10e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
    <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
    <!--'force_torque_sensor_controller' is disabled in contrast to the UR-driver-->
    <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller" doc="Controllers that are activated by default."/>
    <arg name="limited" default="false" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
    <arg name="robot_description_file" default="$(find ur_e_description)/launch/ur10e_upload.launch" doc="Robot description launch file."/>
    <arg name="kinematics_config" default="$(find ur_e_description)/config/ur10e_default.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
    
    <param name="/use_sim_time" type="bool" value="true"/>
    <rosparam file="$(arg controller_config_file)" command="load"/>
    <rosparam ns="/coppelia_config" file="$(find coppeliasim_interface)/config/coppelia_config.yaml"/>
    <include file="$(arg robot_description_file)">
        <arg name="limited" value="$(arg limited)"/>
        <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    </include>
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node pkg="coppeliasim_interface" type="simulation_synchronizer_node" name="simulation_synchronizer_node" required="true" output="screen">
    </node>
    <node type="point_cloud_manager.py" name="point_cloud_manager" pkg="coppeliasim_interface"></node>
    <!-- DEPRECATED
    <node pkg="coppeliasim_interface" type="laser_scanner_node" name="laser_scanner_node" output="screen" required="true">
        <param name="world_frame_id" type="str" value="world"/>
        <param name="resolution" type="int" value="100"/>
        <param name="angle" type="double" value="45.0"/>
        <param name="noise_intensity" type="double" value="0.1"/>
        <param name="noise_std_deviation" type="double" value="0.01"/>
    </node>-->
    <node pkg="coppeliasim_interface" type="hardware_interface_node" name="hardware_interface_node" required="true" output="screen"/>
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="$(arg controllers)" />
    <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="--stopped $(arg stopped_controllers)" />
    <node  name="controller_stopper" pkg="controller_stopper" type="node" respawn="false" output="screen">
    <remap from="robot_running" to="ur_hardware_interface/robot_program_running"/>
    <rosparam param="consistent_controllers">
       - "joint_state_controller"
       - "speed_scaling_state_controller"
       - "robot_status_controller"
    </rosparam>
  </node>
</launch>